#+author: conao3
#+date: <2020-03-20 Fri>

[[https://github.com/conao3/oj.el][https://raw.githubusercontent.com/conao3/files/master/blob/headers/png/oj.el.png]]
[[https://github.com/conao3/oj.el/blob/master/LICENSE][https://img.shields.io/github/license/conao3/oj.el.svg?style=flat-square]]
[[https://github.com/conao3/oj.el/releases][https://img.shields.io/github/tag/conao3/oj.el.svg?style=flat-square]]
[[https://github.com/conao3/oj.el/actions][https://github.com/conao3/oj.el/workflows/Main%20workflow/badge.svg]]
[[https://app.codacy.com/project/conao3/oj.el/dashboard][https://img.shields.io/codacy/grade/62a36f4f04524d5e8c758440e8071c45.svg?logo=codacy&style=flat-square]]
[[https://www.patreon.com/conao3][https://img.shields.io/badge/patreon-become%20a%20patron-orange.svg?logo=patreon&style=flat-square]]
[[https://twitter.com/conao_3][https://img.shields.io/badge/twitter-@conao__3-blue.svg?logo=twitter&style=flat-square]]
[[https://conao3-support.slack.com/join/shared_invite/enQtNjUzMDMxODcyMjE1LWUwMjhiNTU3Yjk3ODIwNzAxMTgwOTkxNmJiN2M4OTZkMWY0NjI4ZTg4MTVlNzcwNDY2ZjVjYmRiZmJjZDU4MDE][https://img.shields.io/badge/chat-on_slack-blue.svg?logo=slack&style=flat-square]]

* Table of Contents
- [[#description][Description]]
- [[#install][Install]]
- [[#usage][Usage]]
- [[#customize][Customize]]
- [[#information][Information]]
  - [[#community][Community]]
  - [[#contribution][Contribution]]
  - [[#migration][Migration]]
  - [[#license][License]]
  - [[#author][Author]]
  - [[#contributors][Contributors]]

* Description
Competitive programming tools client for AtCoder, Codeforces.

Now support below online judges and feature.
#+begin_src emacs-lisp
  (defvar oj-online-judges
    '((aoj                . ((name . "Aizu Online Judge")        (url . "https://onlinejudge.u-aizu.ac.jp/")))
      (aoj2               . ((name . "Aizu Online Judge (Beta)") (url . "https://onlinejudge.u-aizu.ac.jp/courses/")))
      (anrchy-golf        . ((name . "Anarchy Golf")             (url . "http://golf.shinh.org/p.rb?")))
      (atcoder            . ((name . "AtCoder")                  (url . "https://atcoder.jp/contests/")))
      (codeforces         . ((name . "Codeforces")               (url . "https://codeforces.com/contests/")))
      (cs-academy         . ((name . "CS Academy")               (url . "https://csacademy.com/contests/")))
      (facebook           . ((name . "Facebook Hacker Cup")      (url . "https://www.facebook.com/hackercup/")))
      (hackerrank         . ((name . "HackerRank")               (url . "https://www.hackerrank.com/challenges/")))
      (hackerrank-contest . ((name . "HackerRank Contest")       (url . "https://www.hackerrank.com/contests/")))
      (kattis             . ((name . "Kattis")                   (url . "https://open.kattis.com/probrems/")))
      (poj                . ((name . "PKU JudgeOnline")          (url . "http://poj.org/problem?id=")))
      (topcoder           . ((name . "Topcoder")                 (url . "https://www.topcoder.com/challenges/")))
      (toph               . ((name . "Toph (Problem Archive)")   (url . "https://toph.co/p/")))
      (codechef           . ((name . "CodeChef")                 (url . "https://www.codechef.com/problems/")))
      (soj                . ((name . "Sphere online judge")      (url . "https://www.spoj.com/problems/")))
      (yukicoder          . ((name . "yukicoder")                (url . "https://yukicoder.me/problems/no/")))
      (yukicoder-contest  . ((name . "yukicoder Contest")        (url . "https://yukicoder.me/contests/")))
      (library-checker    . ((name . "Library Checker")          (url . "https://judge.yosupo.jp/problem/"))))
    "Supported online judges.

  - Download sample cases
    (aoj-arena aoj anrchy-golf atcoder codeforces
     cs-academy facebook hackerrank kattis poj toph
     codechef soj yukicoder library-checker)

  - Download system cases
    (aoj yukicoder)

  - Submit solution source code
    (atcoder codeforces topcoder hackerrank toph)

  NOTE: online-judge symbol MUST NOT include slash (\"/\").")
#+end_src

* Install
#+begin_src emacs-lisp
  (leaf oj :ensure t)
#+end_src

* Usage

* Customize
** Template file
In [[https://github.com/kyuridenamida/atcoder-tools][atcoder-tools]], you can use template file for auto generate source code.

=oj= will specify =--template= argument automatically if you locate =OJ-HOME-DIR/template/template.{{ext}}= file like below.

#+begin_src cpp
  #include <bits/stdc++.h>
  using namespace std;

  {% if mod %}
  const long long MOD = {{ mod }};
  {% endif %}
  {% if yes_str %}
  const string YES = "{{ yes_str }}";
  {% endif %}
  {% if no_str %}
  const string NO = "{{ no_str }}";
  {% endif %}

  {% if prediction_success %}
  void solve({{ formal_arguments }}){

  }
  {% endif %}

  int main(){
      {% if prediction_success %}
      {{input_part}}
      solve({{ actual_arguments }});
      {% else %}
      {% endif %}
      return 0;
  }
#+end_src

For more information, please see [[https://github.com/kyuridenamida/atcoder-tools#%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88%E3%81%AE%E4%BE%8B][atcoder-tools README]].

* Information
** Community
All feedback and suggestions are welcome!

You can use github issues, but you can also use [[https://conao3-support.slack.com/join/shared_invite/enQtNjUzMDMxODcyMjE1LWUwMjhiNTU3Yjk3ODIwNzAxMTgwOTkxNmJiN2M4OTZkMWY0NjI4ZTg4MTVlNzcwNDY2ZjVjYmRiZmJjZDU4MDE][Slack]]
if you want a more casual conversation.

** Contribution
We welcome PR!

*** Require tools for testing
- cask
  - install via brew
    #+begin_src shell
      brew install cask
    #+end_src

  - manual install
    #+begin_src shell
      cd ~/
      hub clone cask/cask
      export PATH="$HOME/.cask/bin:$PATH"
    #+end_src

*** Running test
Below operation flow is recommended.
#+begin_src shell
  make                              # Install git-hooks in local .git

  git branch [feature-branch]       # Create branch named [feature-branch]
  git checkout [feature-branch]     # Checkout branch named [feature-branch]

  # <edit loop>
  emacs oj.el           # Edit something you want

  make test                         # Test oj via multi version Emacs
  git commit -am "brabra"           # Commit (auto-run test before commit)
  # </edit loop>

  hub fork                          # Create fork at GitHub
  git push [user] [feature-branch]  # Push feature-branch to your fork
  hub pull-request                  # Create pull-request
#+end_src

** Migration

** License
#+begin_example
  General Public License Version 3 (GPLv3)
  Copyright (c) Naoya Yamashita - https://conao3.com
  https://github.com/conao3/oj.el/blob/master/LICENSE
#+end_example

** Author
- Naoya Yamashita ([[https://github.com/conao3][conao3]])

** Contributors
